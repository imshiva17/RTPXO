"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/trains/route";
exports.ids = ["app/api/trains/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrains%2Froute&page=%2Fapi%2Ftrains%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrains%2Froute.ts&appDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrains%2Froute&page=%2Fapi%2Ftrains%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrains%2Froute.ts&appDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_shiva_Desktop_SIH_Projects_Main_sih_train_traffic_controller_app_api_trains_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/trains/route.ts */ \"(rsc)/./app/api/trains/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/trains/route\",\n        pathname: \"/api/trains\",\n        filename: \"route\",\n        bundlePath: \"app/api/trains/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\shiva\\\\Desktop\\\\SIH Projects\\\\Main sih\\\\train-traffic-controller\\\\app\\\\api\\\\trains\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_shiva_Desktop_SIH_Projects_Main_sih_train_traffic_controller_app_api_trains_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/trains/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0cmFpbnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnRyYWlucyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnRyYWlucyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNzaGl2YSU1Q0Rlc2t0b3AlNUNTSUglMjBQcm9qZWN0cyU1Q01haW4lMjBzaWglNUN0cmFpbi10cmFmZmljLWNvbnRyb2xsZXIlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q3NoaXZhJTVDRGVza3RvcCU1Q1NJSCUyMFByb2plY3RzJTVDTWFpbiUyMHNpaCU1Q3RyYWluLXRyYWZmaWMtY29udHJvbGxlciZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDdUQ7QUFDcEk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi10cmFmZmljLWNvbnRyb2xsZXIvPzg4MDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcc2hpdmFcXFxcRGVza3RvcFxcXFxTSUggUHJvamVjdHNcXFxcTWFpbiBzaWhcXFxcdHJhaW4tdHJhZmZpYy1jb250cm9sbGVyXFxcXGFwcFxcXFxhcGlcXFxcdHJhaW5zXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90cmFpbnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cmFpbnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3RyYWlucy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXHNoaXZhXFxcXERlc2t0b3BcXFxcU0lIIFByb2plY3RzXFxcXE1haW4gc2loXFxcXHRyYWluLXRyYWZmaWMtY29udHJvbGxlclxcXFxhcHBcXFxcYXBpXFxcXHRyYWluc1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdHJhaW5zL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrains%2Froute&page=%2Fapi%2Ftrains%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrains%2Froute.ts&appDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/trains/route.ts":
/*!*********************************!*\
  !*** ./app/api/trains/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_real_time_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/real-time-engine */ \"(rsc)/./lib/real-time-engine.ts\");\n\n\nasync function GET() {\n    try {\n        // Ensure engine is running\n        if (!_lib_real_time_engine__WEBPACK_IMPORTED_MODULE_1__.realTimeEngine.getSystemState().isRunning) {\n            _lib_real_time_engine__WEBPACK_IMPORTED_MODULE_1__.realTimeEngine.start();\n        }\n        const systemState = _lib_real_time_engine__WEBPACK_IMPORTED_MODULE_1__.realTimeEngine.getSystemState();\n        const trains = systemState.trains.map((train)=>({\n                ...train,\n                x: train.coordinates.lng * 100,\n                y: train.coordinates.lat * 100,\n                lastUpdate: new Date().toISOString(),\n                eta: train.eta || `${Math.floor(Math.random() * 15) + 1} min`\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(trains);\n    } catch (error) {\n        console.error(\"Error fetching train data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch train data\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Update train data\nasync function POST(request) {\n    try {\n        const trainUpdate = await request.json();\n        // In production, this would update the railway management system\n        console.log(\"Train update received:\", trainUpdate);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Train data updated successfully\"\n        });\n    } catch (error) {\n        console.error(\"Error updating train data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to update train data\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3RyYWlucy9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ29CO0FBR3ZELGVBQWVFO0lBQ3BCLElBQUk7UUFDRiwyQkFBMkI7UUFDM0IsSUFBSSxDQUFDRCxpRUFBY0EsQ0FBQ0UsY0FBYyxHQUFHQyxTQUFTLEVBQUU7WUFDOUNILGlFQUFjQSxDQUFDSSxLQUFLO1FBQ3RCO1FBRUEsTUFBTUMsY0FBY0wsaUVBQWNBLENBQUNFLGNBQWM7UUFDakQsTUFBTUksU0FBU0QsWUFBWUMsTUFBTSxDQUFDQyxHQUFHLENBQUNDLENBQUFBLFFBQVU7Z0JBQzlDLEdBQUdBLEtBQUs7Z0JBQ1JDLEdBQUdELE1BQU1FLFdBQVcsQ0FBQ0MsR0FBRyxHQUFHO2dCQUMzQkMsR0FBR0osTUFBTUUsV0FBVyxDQUFDRyxHQUFHLEdBQUc7Z0JBQzNCQyxZQUFZLElBQUlDLE9BQU9DLFdBQVc7Z0JBQ2xDQyxLQUFLVCxNQUFNUyxHQUFHLElBQUksQ0FBQyxFQUFFQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSyxNQUFNLEVBQUUsSUFBSSxDQUFDO1lBQy9EO1FBRUEsT0FBT3JCLHFEQUFZQSxDQUFDc0IsSUFBSSxDQUFDZjtJQUMzQixFQUFFLE9BQU9nQixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyw4QkFBOEJBO1FBQzVDLE9BQU92QixxREFBWUEsQ0FBQ3NCLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQTZCLEdBQUc7WUFBRUUsUUFBUTtRQUFJO0lBQ2xGO0FBQ0Y7QUFFQSxvQkFBb0I7QUFDYixlQUFlQyxLQUFLQyxPQUFnQjtJQUN6QyxJQUFJO1FBQ0YsTUFBTUMsY0FBYyxNQUFNRCxRQUFRTCxJQUFJO1FBRXRDLGlFQUFpRTtRQUNqRUUsUUFBUUssR0FBRyxDQUFDLDBCQUEwQkQ7UUFFdEMsT0FBTzVCLHFEQUFZQSxDQUFDc0IsSUFBSSxDQUFDO1lBQ3ZCUSxTQUFTO1lBQ1RDLFNBQVM7UUFDWDtJQUNGLEVBQUUsT0FBT1IsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxPQUFPdkIscURBQVlBLENBQUNzQixJQUFJLENBQUM7WUFBRUMsT0FBTztRQUE4QixHQUFHO1lBQUVFLFFBQVE7UUFBSTtJQUNuRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhaW4tdHJhZmZpYy1jb250cm9sbGVyLy4vYXBwL2FwaS90cmFpbnMvcm91dGUudHM/MTg2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIlxyXG5pbXBvcnQgeyByZWFsVGltZUVuZ2luZSB9IGZyb20gJy4uLy4uLy4uL2xpYi9yZWFsLXRpbWUtZW5naW5lJ1xyXG5pbXBvcnQgeyBJTkRJQU5fUkFJTFdBWV9TVEFUSU9OUywgVFJBSU5fU0NIRURVTEVTLCBEYXRhR2VuZXJhdG9yIH0gZnJvbSAnLi4vLi4vLi4vZGF0YS9yYXctZGF0YXNldHMnXHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBFbnN1cmUgZW5naW5lIGlzIHJ1bm5pbmdcclxuICAgIGlmICghcmVhbFRpbWVFbmdpbmUuZ2V0U3lzdGVtU3RhdGUoKS5pc1J1bm5pbmcpIHtcclxuICAgICAgcmVhbFRpbWVFbmdpbmUuc3RhcnQoKVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBzeXN0ZW1TdGF0ZSA9IHJlYWxUaW1lRW5naW5lLmdldFN5c3RlbVN0YXRlKClcclxuICAgIGNvbnN0IHRyYWlucyA9IHN5c3RlbVN0YXRlLnRyYWlucy5tYXAodHJhaW4gPT4gKHtcclxuICAgICAgLi4udHJhaW4sXHJcbiAgICAgIHg6IHRyYWluLmNvb3JkaW5hdGVzLmxuZyAqIDEwMCxcclxuICAgICAgeTogdHJhaW4uY29vcmRpbmF0ZXMubGF0ICogMTAwLFxyXG4gICAgICBsYXN0VXBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIGV0YTogdHJhaW4uZXRhIHx8IGAke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDE1KSArIDF9IG1pbmBcclxuICAgIH0pKVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih0cmFpbnMpXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB0cmFpbiBkYXRhOlwiLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIkZhaWxlZCB0byBmZXRjaCB0cmFpbiBkYXRhXCIgfSwgeyBzdGF0dXM6IDUwMCB9KVxyXG4gIH1cclxufVxyXG5cclxuLy8gVXBkYXRlIHRyYWluIGRhdGFcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogUmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB0cmFpblVwZGF0ZSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXHJcblxyXG4gICAgLy8gSW4gcHJvZHVjdGlvbiwgdGhpcyB3b3VsZCB1cGRhdGUgdGhlIHJhaWx3YXkgbWFuYWdlbWVudCBzeXN0ZW1cclxuICAgIGNvbnNvbGUubG9nKFwiVHJhaW4gdXBkYXRlIHJlY2VpdmVkOlwiLCB0cmFpblVwZGF0ZSlcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBtZXNzYWdlOiBcIlRyYWluIGRhdGEgdXBkYXRlZCBzdWNjZXNzZnVsbHlcIixcclxuICAgIH0pXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1cGRhdGluZyB0cmFpbiBkYXRhOlwiLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIkZhaWxlZCB0byB1cGRhdGUgdHJhaW4gZGF0YVwiIH0sIHsgc3RhdHVzOiA1MDAgfSlcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInJlYWxUaW1lRW5naW5lIiwiR0VUIiwiZ2V0U3lzdGVtU3RhdGUiLCJpc1J1bm5pbmciLCJzdGFydCIsInN5c3RlbVN0YXRlIiwidHJhaW5zIiwibWFwIiwidHJhaW4iLCJ4IiwiY29vcmRpbmF0ZXMiLCJsbmciLCJ5IiwibGF0IiwibGFzdFVwZGF0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImV0YSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiLCJQT1NUIiwicmVxdWVzdCIsInRyYWluVXBkYXRlIiwibG9nIiwic3VjY2VzcyIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/trains/route.ts\n");

/***/ }),

/***/ "(rsc)/./data/raw-datasets.ts":
/*!******************************!*\
  !*** ./data/raw-datasets.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataGenerator: () => (/* binding */ DataGenerator),\n/* harmony export */   INDIAN_RAILWAY_STATIONS: () => (/* binding */ INDIAN_RAILWAY_STATIONS),\n/* harmony export */   REAL_TIME_SENSOR_DATA: () => (/* binding */ REAL_TIME_SENSOR_DATA),\n/* harmony export */   TRAIN_SCHEDULES: () => (/* binding */ TRAIN_SCHEDULES),\n/* harmony export */   calculateTrainPriority: () => (/* binding */ calculateTrainPriority)\n/* harmony export */ });\n// Raw datasets for train traffic controller system\n// In production, these would come from actual railway APIs and sensors\nconst INDIAN_RAILWAY_STATIONS = [\n    {\n        id: \"NDLS\",\n        name: \"New Delhi\",\n        code: \"NDLS\",\n        coordinates: {\n            lat: 28.6448,\n            lng: 77.2097\n        },\n        platforms: 16,\n        zone: \"Northern Railway\",\n        division: \"Delhi\"\n    },\n    {\n        id: \"GZB\",\n        name: \"Ghaziabad\",\n        code: \"GZB\",\n        coordinates: {\n            lat: 28.6692,\n            lng: 77.4538\n        },\n        platforms: 8,\n        zone: \"Northern Railway\",\n        division: \"Delhi\"\n    },\n    {\n        id: \"MB\",\n        name: \"Moradabad\",\n        code: \"MB\",\n        coordinates: {\n            lat: 28.8386,\n            lng: 78.7733\n        },\n        platforms: 6,\n        zone: \"Northern Railway\",\n        division: \"Moradabad\"\n    },\n    {\n        id: \"BE\",\n        name: \"Bareilly\",\n        code: \"BE\",\n        coordinates: {\n            lat: 28.3670,\n            lng: 79.4304\n        },\n        platforms: 4,\n        zone: \"Northern Railway\",\n        division: \"Moradabad\"\n    },\n    {\n        id: \"LKO\",\n        name: \"Lucknow\",\n        code: \"LKO\",\n        coordinates: {\n            lat: 26.8467,\n            lng: 80.9462\n        },\n        platforms: 6,\n        zone: \"Northern Railway\",\n        division: \"Lucknow\"\n    }\n];\nconst TRAIN_SCHEDULES = [\n    {\n        trainNumber: \"12301\",\n        trainName: \"Rajdhani Express\",\n        type: \"express\",\n        weight: 850,\n        cost: 95000,\n        route: [\n            {\n                stationCode: \"NDLS\",\n                arrivalTime: null,\n                departureTime: \"16:55\",\n                platform: 1\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"17:28\",\n                departureTime: \"17:30\",\n                platform: 2\n            },\n            {\n                stationCode: \"MB\",\n                arrivalTime: \"19:15\",\n                departureTime: \"19:17\",\n                platform: 1\n            },\n            {\n                stationCode: \"BE\",\n                arrivalTime: \"20:45\",\n                departureTime: \"20:47\",\n                platform: 3\n            },\n            {\n                stationCode: \"LKO\",\n                arrivalTime: \"23:30\",\n                departureTime: null,\n                platform: 4\n            }\n        ]\n    },\n    {\n        trainNumber: \"12002\",\n        trainName: \"Shatabdi Express\",\n        type: \"express\",\n        weight: 720,\n        cost: 78000,\n        route: [\n            {\n                stationCode: \"NDLS\",\n                arrivalTime: null,\n                departureTime: \"06:00\",\n                platform: 3\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"06:33\",\n                departureTime: \"06:35\",\n                platform: 1\n            },\n            {\n                stationCode: \"MB\",\n                arrivalTime: \"08:20\",\n                departureTime: \"08:22\",\n                platform: 2\n            },\n            {\n                stationCode: \"BE\",\n                arrivalTime: \"09:50\",\n                departureTime: \"09:52\",\n                platform: 1\n            },\n            {\n                stationCode: \"LKO\",\n                arrivalTime: \"12:35\",\n                departureTime: null,\n                platform: 2\n            }\n        ]\n    },\n    {\n        trainNumber: \"22691\",\n        trainName: \"Rajdhani Express (KTK)\",\n        type: \"express\",\n        weight: 800,\n        cost: 89000,\n        route: [\n            {\n                stationCode: \"NDLS\",\n                arrivalTime: null,\n                departureTime: \"15:50\",\n                platform: 2\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"16:23\",\n                departureTime: \"16:25\",\n                platform: 3\n            }\n        ]\n    },\n    {\n        trainNumber: \"12259\",\n        trainName: \"Duronto Express\",\n        type: \"express\",\n        weight: 780,\n        cost: 82000,\n        route: [\n            {\n                stationCode: \"NDLS\",\n                arrivalTime: null,\n                departureTime: \"22:15\",\n                platform: 4\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"22:48\",\n                departureTime: \"22:50\",\n                platform: 1\n            }\n        ]\n    },\n    {\n        trainNumber: \"12056\",\n        trainName: \"Jan Shatabdi Express\",\n        type: \"express\",\n        weight: 650,\n        cost: 65000,\n        route: [\n            {\n                stationCode: \"NDLS\",\n                arrivalTime: null,\n                departureTime: \"14:20\",\n                platform: 5\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"14:53\",\n                departureTime: \"14:55\",\n                platform: 2\n            }\n        ]\n    },\n    {\n        trainNumber: \"12178\",\n        trainName: \"Intercity Express\",\n        type: \"express\",\n        weight: 600,\n        cost: 55000,\n        route: [\n            {\n                stationCode: \"NDLS\",\n                arrivalTime: null,\n                departureTime: \"07:30\",\n                platform: 6\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"08:03\",\n                departureTime: \"08:05\",\n                platform: 4\n            }\n        ]\n    },\n    {\n        trainNumber: \"22470\",\n        trainName: \"Vande Bharat Express\",\n        type: \"express\",\n        weight: 430,\n        cost: 120000,\n        route: [\n            {\n                stationCode: \"NDLS\",\n                arrivalTime: null,\n                departureTime: \"06:30\",\n                platform: 7\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"07:03\",\n                departureTime: \"07:05\",\n                platform: 1\n            }\n        ]\n    },\n    {\n        trainNumber: \"11234\",\n        trainName: \"Freight Express\",\n        type: \"freight\",\n        weight: 2500,\n        cost: 35000,\n        route: [\n            {\n                stationCode: \"GZB\",\n                arrivalTime: null,\n                departureTime: \"03:00\",\n                platform: 8\n            },\n            {\n                stationCode: \"MB\",\n                arrivalTime: \"05:30\",\n                departureTime: \"05:35\",\n                platform: 3\n            },\n            {\n                stationCode: \"BE\",\n                arrivalTime: \"07:45\",\n                departureTime: null,\n                platform: 2\n            }\n        ]\n    },\n    {\n        trainNumber: \"14556\",\n        trainName: \"Bareilly Express\",\n        type: \"express\",\n        weight: 580,\n        cost: 48000,\n        route: [\n            {\n                stationCode: \"MB\",\n                arrivalTime: null,\n                departureTime: \"14:30\",\n                platform: 1\n            },\n            {\n                stationCode: \"BE\",\n                arrivalTime: \"16:15\",\n                departureTime: \"16:17\",\n                platform: 3\n            },\n            {\n                stationCode: \"LKO\",\n                arrivalTime: \"19:45\",\n                departureTime: null,\n                platform: 5\n            }\n        ]\n    },\n    {\n        trainNumber: \"15708\",\n        trainName: \"Amrapali Express\",\n        type: \"express\",\n        weight: 620,\n        cost: 52000,\n        route: [\n            {\n                stationCode: \"BE\",\n                arrivalTime: null,\n                departureTime: \"09:20\",\n                platform: 2\n            },\n            {\n                stationCode: \"LKO\",\n                arrivalTime: \"12:30\",\n                departureTime: \"12:35\",\n                platform: 3\n            },\n            {\n                stationCode: \"GZB\",\n                arrivalTime: \"16:45\",\n                departureTime: null,\n                platform: 4\n            }\n        ]\n    },\n    {\n        trainNumber: \"12554\",\n        trainName: \"Vaishali Express\",\n        type: \"express\",\n        weight: 680,\n        cost: 68000,\n        route: [\n            {\n                stationCode: \"LKO\",\n                arrivalTime: null,\n                departureTime: \"05:15\",\n                platform: 1\n            },\n            {\n                stationCode: \"BE\",\n                arrivalTime: \"08:30\",\n                departureTime: \"08:32\",\n                platform: 2\n            },\n            {\n                stationCode: \"MB\",\n                arrivalTime: \"10:45\",\n                departureTime: null,\n                platform: 3\n            }\n        ]\n    },\n    {\n        trainNumber: \"12876\",\n        trainName: \"Neelachal Express\",\n        type: \"express\",\n        weight: 640,\n        cost: 58000,\n        route: [\n            {\n                stationCode: \"GZB\",\n                arrivalTime: null,\n                departureTime: \"13:20\",\n                platform: 5\n            },\n            {\n                stationCode: \"MB\",\n                arrivalTime: \"15:10\",\n                departureTime: \"15:12\",\n                platform: 2\n            },\n            {\n                stationCode: \"LKO\",\n                arrivalTime: \"18:45\",\n                departureTime: null,\n                platform: 4\n            }\n        ]\n    }\n];\nconst REAL_TIME_SENSOR_DATA = {\n    trackOccupancy: [\n        {\n            sectionId: \"NDLS-GZB-1\",\n            occupied: true,\n            trainId: \"T001\",\n            timestamp: Date.now()\n        },\n        {\n            sectionId: \"GZB-MB-1\",\n            occupied: false,\n            trainId: null,\n            timestamp: Date.now()\n        },\n        {\n            sectionId: \"MB-BE-1\",\n            occupied: true,\n            trainId: \"T002\",\n            timestamp: Date.now()\n        }\n    ],\n    signalStatus: [\n        {\n            signalId: \"SIG_NDLS_001\",\n            status: \"green\",\n            location: \"NDLS\",\n            timestamp: Date.now()\n        },\n        {\n            signalId: \"SIG_GZB_001\",\n            status: \"yellow\",\n            location: \"GZB\",\n            timestamp: Date.now()\n        },\n        {\n            signalId: \"SIG_MB_001\",\n            status: \"red\",\n            location: \"MB\",\n            timestamp: Date.now()\n        }\n    ],\n    weatherData: [\n        {\n            stationId: \"NDLS\",\n            temperature: 25,\n            humidity: 60,\n            visibility: 10,\n            rainfall: 0\n        },\n        {\n            stationId: \"GZB\",\n            temperature: 24,\n            humidity: 65,\n            visibility: 8,\n            rainfall: 2\n        },\n        {\n            stationId: \"MB\",\n            temperature: 23,\n            humidity: 70,\n            visibility: 6,\n            rainfall: 5\n        }\n    ]\n};\n// Priority calculation based on weight and cost\nfunction calculateTrainPriority(weight, cost) {\n    // Higher cost and lower weight = higher priority\n    // Vande Bharat: 430 tons, 120000 cost = 12 - 0.43 + 1 = 12.57 → 10 (highest)\n    // Freight: 2500 tons, 35000 cost = 3.5 - 2.5 + 1 = 2 (lowest)\n    const costFactor = cost / 10000;\n    const weightPenalty = weight / 1000;\n    const basePriority = 1;\n    const priority = Math.round(costFactor - weightPenalty + basePriority);\n    return Math.max(1, Math.min(10, priority)) // Clamp between 1-10\n    ;\n}\nclass DataGenerator {\n    static generateTrainPosition(trainId, lastPosition, speed) {\n        const timeStep = 1;\n        const distance = speed * timeStep / 3600;\n        const bearing = Math.random() * 2 * Math.PI;\n        const deltaLat = distance / 111 * Math.cos(bearing);\n        const deltaLng = distance / 111 * Math.sin(bearing);\n        return {\n            lat: lastPosition.lat + deltaLat,\n            lng: lastPosition.lng + deltaLng,\n            timestamp: Date.now(),\n            speed,\n            trainId\n        };\n    }\n    static generateDelayFactor() {\n        const factors = [\n            {\n                type: \"weather\",\n                probability: 0.1,\n                impact: 5\n            },\n            {\n                type: \"signal\",\n                probability: 0.05,\n                impact: 15\n            },\n            {\n                type: \"passenger\",\n                probability: 0.15,\n                impact: 3\n            },\n            {\n                type: \"technical\",\n                probability: 0.03,\n                impact: 25\n            }\n        ];\n        let totalDelay = 0;\n        factors.forEach((factor)=>{\n            if (Math.random() < factor.probability) {\n                totalDelay += factor.impact;\n            }\n        });\n        return totalDelay;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhL3Jhdy1kYXRhc2V0cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLG1EQUFtRDtBQUNuRCx1RUFBdUU7QUFFaEUsTUFBTUEsMEJBQTBCO0lBQ3JDO1FBQ0VDLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxNQUFNO1FBQ05DLGFBQWE7WUFBRUMsS0FBSztZQUFTQyxLQUFLO1FBQVE7UUFDMUNDLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxVQUFVO0lBQ1o7SUFDQTtRQUNFUixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxhQUFhO1lBQUVDLEtBQUs7WUFBU0MsS0FBSztRQUFRO1FBQzFDQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsVUFBVTtJQUNaO0lBQ0E7UUFDRVIsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLE1BQU07UUFDTkMsYUFBYTtZQUFFQyxLQUFLO1lBQVNDLEtBQUs7UUFBUTtRQUMxQ0MsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFVBQVU7SUFDWjtJQUNBO1FBQ0VSLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxNQUFNO1FBQ05DLGFBQWE7WUFBRUMsS0FBSztZQUFTQyxLQUFLO1FBQVE7UUFDMUNDLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxVQUFVO0lBQ1o7SUFDQTtRQUNFUixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxhQUFhO1lBQUVDLEtBQUs7WUFBU0MsS0FBSztRQUFRO1FBQzFDQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsVUFBVTtJQUNaO0NBQ0Q7QUFFTSxNQUFNQyxrQkFBa0I7SUFDN0I7UUFDRUMsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE9BQU87WUFDTDtnQkFBRUMsYUFBYTtnQkFBUUMsYUFBYTtnQkFBTUMsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQzlFO2dCQUFFSCxhQUFhO2dCQUFPQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFTQyxVQUFVO1lBQUU7WUFDaEY7Z0JBQUVILGFBQWE7Z0JBQU1DLGFBQWE7Z0JBQVNDLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUMvRTtnQkFBRUgsYUFBYTtnQkFBTUMsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQy9FO2dCQUFFSCxhQUFhO2dCQUFPQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFNQyxVQUFVO1lBQUU7U0FDOUU7SUFDSDtJQUNBO1FBQ0VULGFBQWE7UUFDYkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsTUFBTTtRQUNOQyxPQUFPO1lBQ0w7Z0JBQUVDLGFBQWE7Z0JBQVFDLGFBQWE7Z0JBQU1DLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUM5RTtnQkFBRUgsYUFBYTtnQkFBT0MsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQ2hGO2dCQUFFSCxhQUFhO2dCQUFNQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFTQyxVQUFVO1lBQUU7WUFDL0U7Z0JBQUVILGFBQWE7Z0JBQU1DLGFBQWE7Z0JBQVNDLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUMvRTtnQkFBRUgsYUFBYTtnQkFBT0MsYUFBYTtnQkFBU0MsZUFBZTtnQkFBTUMsVUFBVTtZQUFFO1NBQzlFO0lBQ0g7SUFDQTtRQUNFVCxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxRQUFRO1FBQ1JDLE1BQU07UUFDTkMsT0FBTztZQUNMO2dCQUFFQyxhQUFhO2dCQUFRQyxhQUFhO2dCQUFNQyxlQUFlO2dCQUFTQyxVQUFVO1lBQUU7WUFDOUU7Z0JBQUVILGFBQWE7Z0JBQU9DLGFBQWE7Z0JBQVNDLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtTQUNqRjtJQUNIO0lBQ0E7UUFDRVQsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE9BQU87WUFDTDtnQkFBRUMsYUFBYTtnQkFBUUMsYUFBYTtnQkFBTUMsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQzlFO2dCQUFFSCxhQUFhO2dCQUFPQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFTQyxVQUFVO1lBQUU7U0FDakY7SUFDSDtJQUNBO1FBQ0VULGFBQWE7UUFDYkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsTUFBTTtRQUNOQyxPQUFPO1lBQ0w7Z0JBQUVDLGFBQWE7Z0JBQVFDLGFBQWE7Z0JBQU1DLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUM5RTtnQkFBRUgsYUFBYTtnQkFBT0MsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1NBQ2pGO0lBQ0g7SUFDQTtRQUNFVCxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxRQUFRO1FBQ1JDLE1BQU07UUFDTkMsT0FBTztZQUNMO2dCQUFFQyxhQUFhO2dCQUFRQyxhQUFhO2dCQUFNQyxlQUFlO2dCQUFTQyxVQUFVO1lBQUU7WUFDOUU7Z0JBQUVILGFBQWE7Z0JBQU9DLGFBQWE7Z0JBQVNDLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtTQUNqRjtJQUNIO0lBQ0E7UUFDRVQsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE9BQU87WUFDTDtnQkFBRUMsYUFBYTtnQkFBUUMsYUFBYTtnQkFBTUMsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQzlFO2dCQUFFSCxhQUFhO2dCQUFPQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFTQyxVQUFVO1lBQUU7U0FDakY7SUFDSDtJQUNBO1FBQ0VULGFBQWE7UUFDYkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsTUFBTTtRQUNOQyxPQUFPO1lBQ0w7Z0JBQUVDLGFBQWE7Z0JBQU9DLGFBQWE7Z0JBQU1DLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUM3RTtnQkFBRUgsYUFBYTtnQkFBTUMsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQy9FO2dCQUFFSCxhQUFhO2dCQUFNQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFNQyxVQUFVO1lBQUU7U0FDN0U7SUFDSDtJQUNBO1FBQ0VULGFBQWE7UUFDYkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsTUFBTTtRQUNOQyxPQUFPO1lBQ0w7Z0JBQUVDLGFBQWE7Z0JBQU1DLGFBQWE7Z0JBQU1DLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUM1RTtnQkFBRUgsYUFBYTtnQkFBTUMsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQy9FO2dCQUFFSCxhQUFhO2dCQUFPQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFNQyxVQUFVO1lBQUU7U0FDOUU7SUFDSDtJQUNBO1FBQ0VULGFBQWE7UUFDYkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsTUFBTTtRQUNOQyxPQUFPO1lBQ0w7Z0JBQUVDLGFBQWE7Z0JBQU1DLGFBQWE7Z0JBQU1DLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUM1RTtnQkFBRUgsYUFBYTtnQkFBT0MsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQ2hGO2dCQUFFSCxhQUFhO2dCQUFPQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFNQyxVQUFVO1lBQUU7U0FDOUU7SUFDSDtJQUNBO1FBQ0VULGFBQWE7UUFDYkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsTUFBTTtRQUNOQyxPQUFPO1lBQ0w7Z0JBQUVDLGFBQWE7Z0JBQU9DLGFBQWE7Z0JBQU1DLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUM3RTtnQkFBRUgsYUFBYTtnQkFBTUMsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQy9FO2dCQUFFSCxhQUFhO2dCQUFNQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFNQyxVQUFVO1lBQUU7U0FDN0U7SUFDSDtJQUNBO1FBQ0VULGFBQWE7UUFDYkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsTUFBTTtRQUNOQyxPQUFPO1lBQ0w7Z0JBQUVDLGFBQWE7Z0JBQU9DLGFBQWE7Z0JBQU1DLGVBQWU7Z0JBQVNDLFVBQVU7WUFBRTtZQUM3RTtnQkFBRUgsYUFBYTtnQkFBTUMsYUFBYTtnQkFBU0MsZUFBZTtnQkFBU0MsVUFBVTtZQUFFO1lBQy9FO2dCQUFFSCxhQUFhO2dCQUFPQyxhQUFhO2dCQUFTQyxlQUFlO2dCQUFNQyxVQUFVO1lBQUU7U0FDOUU7SUFDSDtDQUNEO0FBRU0sTUFBTUMsd0JBQXdCO0lBQ25DQyxnQkFBZ0I7UUFDZDtZQUFFQyxXQUFXO1lBQWNDLFVBQVU7WUFBTUMsU0FBUztZQUFRQyxXQUFXQyxLQUFLQyxHQUFHO1FBQUc7UUFDbEY7WUFBRUwsV0FBVztZQUFZQyxVQUFVO1lBQU9DLFNBQVM7WUFBTUMsV0FBV0MsS0FBS0MsR0FBRztRQUFHO1FBQy9FO1lBQUVMLFdBQVc7WUFBV0MsVUFBVTtZQUFNQyxTQUFTO1lBQVFDLFdBQVdDLEtBQUtDLEdBQUc7UUFBRztLQUNoRjtJQUNEQyxjQUFjO1FBQ1o7WUFBRUMsVUFBVTtZQUFnQkMsUUFBUTtZQUFTQyxVQUFVO1lBQVFOLFdBQVdDLEtBQUtDLEdBQUc7UUFBRztRQUNyRjtZQUFFRSxVQUFVO1lBQWVDLFFBQVE7WUFBVUMsVUFBVTtZQUFPTixXQUFXQyxLQUFLQyxHQUFHO1FBQUc7UUFDcEY7WUFBRUUsVUFBVTtZQUFjQyxRQUFRO1lBQU9DLFVBQVU7WUFBTU4sV0FBV0MsS0FBS0MsR0FBRztRQUFHO0tBQ2hGO0lBQ0RLLGFBQWE7UUFDWDtZQUFFQyxXQUFXO1lBQVFDLGFBQWE7WUFBSUMsVUFBVTtZQUFJQyxZQUFZO1lBQUlDLFVBQVU7UUFBRTtRQUNoRjtZQUFFSixXQUFXO1lBQU9DLGFBQWE7WUFBSUMsVUFBVTtZQUFJQyxZQUFZO1lBQUdDLFVBQVU7UUFBRTtRQUM5RTtZQUFFSixXQUFXO1lBQU1DLGFBQWE7WUFBSUMsVUFBVTtZQUFJQyxZQUFZO1lBQUdDLFVBQVU7UUFBRTtLQUM5RTtBQUNILEVBQUM7QUFFRCxnREFBZ0Q7QUFDekMsU0FBU0MsdUJBQXVCekIsTUFBYyxFQUFFQyxJQUFZO0lBQ2pFLGlEQUFpRDtJQUNqRCw2RUFBNkU7SUFDN0UsOERBQThEO0lBQzlELE1BQU15QixhQUFhekIsT0FBTztJQUMxQixNQUFNMEIsZ0JBQWdCM0IsU0FBUztJQUMvQixNQUFNNEIsZUFBZTtJQUVyQixNQUFNQyxXQUFXQyxLQUFLQyxLQUFLLENBQUNMLGFBQWFDLGdCQUFnQkM7SUFDekQsT0FBT0UsS0FBS0UsR0FBRyxDQUFDLEdBQUdGLEtBQUtHLEdBQUcsQ0FBQyxJQUFJSixXQUFXLHFCQUFxQjs7QUFDbEU7QUFFTyxNQUFNSztJQUNYLE9BQU9DLHNCQUFzQnhCLE9BQWUsRUFBRXlCLFlBQXdDLEVBQUVDLEtBQWEsRUFBRTtRQUNyRyxNQUFNQyxXQUFXO1FBQ2pCLE1BQU1DLFdBQVcsUUFBU0QsV0FBWTtRQUN0QyxNQUFNRSxVQUFVVixLQUFLVyxNQUFNLEtBQUssSUFBSVgsS0FBS1ksRUFBRTtRQUMzQyxNQUFNQyxXQUFXLFdBQVksTUFBT2IsS0FBS2MsR0FBRyxDQUFDSjtRQUM3QyxNQUFNSyxXQUFXLFdBQVksTUFBT2YsS0FBS2dCLEdBQUcsQ0FBQ047UUFFN0MsT0FBTztZQUNMakQsS0FBSzZDLGFBQWE3QyxHQUFHLEdBQUdvRDtZQUN4Qm5ELEtBQUs0QyxhQUFhNUMsR0FBRyxHQUFHcUQ7WUFDeEJqQyxXQUFXQyxLQUFLQyxHQUFHO1lBQ25CdUI7WUFDQTFCO1FBQ0Y7SUFDRjtJQUVBLE9BQU9vQyxzQkFBc0I7UUFDM0IsTUFBTUMsVUFBVTtZQUNkO2dCQUFFakQsTUFBTTtnQkFBV2tELGFBQWE7Z0JBQUtDLFFBQVE7WUFBRTtZQUMvQztnQkFBRW5ELE1BQU07Z0JBQVVrRCxhQUFhO2dCQUFNQyxRQUFRO1lBQUc7WUFDaEQ7Z0JBQUVuRCxNQUFNO2dCQUFha0QsYUFBYTtnQkFBTUMsUUFBUTtZQUFFO1lBQ2xEO2dCQUFFbkQsTUFBTTtnQkFBYWtELGFBQWE7Z0JBQU1DLFFBQVE7WUFBRztTQUNwRDtRQUVELElBQUlDLGFBQWE7UUFDakJILFFBQVFJLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFDZCxJQUFJdkIsS0FBS1csTUFBTSxLQUFLWSxPQUFPSixXQUFXLEVBQUU7Z0JBQ3RDRSxjQUFjRSxPQUFPSCxNQUFNO1lBQzdCO1FBQ0Y7UUFFQSxPQUFPQztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFpbi10cmFmZmljLWNvbnRyb2xsZXIvLi9kYXRhL3Jhdy1kYXRhc2V0cy50cz9hNzYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFJhdyBkYXRhc2V0cyBmb3IgdHJhaW4gdHJhZmZpYyBjb250cm9sbGVyIHN5c3RlbVxuLy8gSW4gcHJvZHVjdGlvbiwgdGhlc2Ugd291bGQgY29tZSBmcm9tIGFjdHVhbCByYWlsd2F5IEFQSXMgYW5kIHNlbnNvcnNcblxuZXhwb3J0IGNvbnN0IElORElBTl9SQUlMV0FZX1NUQVRJT05TID0gW1xuICB7XG4gICAgaWQ6ICdORExTJyxcbiAgICBuYW1lOiAnTmV3IERlbGhpJyxcbiAgICBjb2RlOiAnTkRMUycsXG4gICAgY29vcmRpbmF0ZXM6IHsgbGF0OiAyOC42NDQ4LCBsbmc6IDc3LjIwOTcgfSxcbiAgICBwbGF0Zm9ybXM6IDE2LFxuICAgIHpvbmU6ICdOb3J0aGVybiBSYWlsd2F5JyxcbiAgICBkaXZpc2lvbjogJ0RlbGhpJ1xuICB9LFxuICB7XG4gICAgaWQ6ICdHWkInLFxuICAgIG5hbWU6ICdHaGF6aWFiYWQnLFxuICAgIGNvZGU6ICdHWkInLFxuICAgIGNvb3JkaW5hdGVzOiB7IGxhdDogMjguNjY5MiwgbG5nOiA3Ny40NTM4IH0sXG4gICAgcGxhdGZvcm1zOiA4LFxuICAgIHpvbmU6ICdOb3J0aGVybiBSYWlsd2F5JyxcbiAgICBkaXZpc2lvbjogJ0RlbGhpJ1xuICB9LFxuICB7XG4gICAgaWQ6ICdNQicsXG4gICAgbmFtZTogJ01vcmFkYWJhZCcsXG4gICAgY29kZTogJ01CJyxcbiAgICBjb29yZGluYXRlczogeyBsYXQ6IDI4LjgzODYsIGxuZzogNzguNzczMyB9LFxuICAgIHBsYXRmb3JtczogNixcbiAgICB6b25lOiAnTm9ydGhlcm4gUmFpbHdheScsXG4gICAgZGl2aXNpb246ICdNb3JhZGFiYWQnXG4gIH0sXG4gIHtcbiAgICBpZDogJ0JFJyxcbiAgICBuYW1lOiAnQmFyZWlsbHknLFxuICAgIGNvZGU6ICdCRScsXG4gICAgY29vcmRpbmF0ZXM6IHsgbGF0OiAyOC4zNjcwLCBsbmc6IDc5LjQzMDQgfSxcbiAgICBwbGF0Zm9ybXM6IDQsXG4gICAgem9uZTogJ05vcnRoZXJuIFJhaWx3YXknLFxuICAgIGRpdmlzaW9uOiAnTW9yYWRhYmFkJ1xuICB9LFxuICB7XG4gICAgaWQ6ICdMS08nLFxuICAgIG5hbWU6ICdMdWNrbm93JyxcbiAgICBjb2RlOiAnTEtPJyxcbiAgICBjb29yZGluYXRlczogeyBsYXQ6IDI2Ljg0NjcsIGxuZzogODAuOTQ2MiB9LFxuICAgIHBsYXRmb3JtczogNixcbiAgICB6b25lOiAnTm9ydGhlcm4gUmFpbHdheScsXG4gICAgZGl2aXNpb246ICdMdWNrbm93J1xuICB9XG5dXG5cbmV4cG9ydCBjb25zdCBUUkFJTl9TQ0hFRFVMRVMgPSBbXG4gIHtcbiAgICB0cmFpbk51bWJlcjogJzEyMzAxJyxcbiAgICB0cmFpbk5hbWU6ICdSYWpkaGFuaSBFeHByZXNzJyxcbiAgICB0eXBlOiAnZXhwcmVzcycsXG4gICAgd2VpZ2h0OiA4NTAsIC8vIHRvbnNcbiAgICBjb3N0OiA5NTAwMCwgLy8gcGVyIHRyaXBcbiAgICByb3V0ZTogW1xuICAgICAgeyBzdGF0aW9uQ29kZTogJ05ETFMnLCBhcnJpdmFsVGltZTogbnVsbCwgZGVwYXJ0dXJlVGltZTogJzE2OjU1JywgcGxhdGZvcm06IDEgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdHWkInLCBhcnJpdmFsVGltZTogJzE3OjI4JywgZGVwYXJ0dXJlVGltZTogJzE3OjMwJywgcGxhdGZvcm06IDIgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdNQicsIGFycml2YWxUaW1lOiAnMTk6MTUnLCBkZXBhcnR1cmVUaW1lOiAnMTk6MTcnLCBwbGF0Zm9ybTogMSB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0JFJywgYXJyaXZhbFRpbWU6ICcyMDo0NScsIGRlcGFydHVyZVRpbWU6ICcyMDo0NycsIHBsYXRmb3JtOiAzIH0sXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTEtPJywgYXJyaXZhbFRpbWU6ICcyMzozMCcsIGRlcGFydHVyZVRpbWU6IG51bGwsIHBsYXRmb3JtOiA0IH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICB0cmFpbk51bWJlcjogJzEyMDAyJyxcbiAgICB0cmFpbk5hbWU6ICdTaGF0YWJkaSBFeHByZXNzJyxcbiAgICB0eXBlOiAnZXhwcmVzcycsXG4gICAgd2VpZ2h0OiA3MjAsXG4gICAgY29zdDogNzgwMDAsXG4gICAgcm91dGU6IFtcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdORExTJywgYXJyaXZhbFRpbWU6IG51bGwsIGRlcGFydHVyZVRpbWU6ICcwNjowMCcsIHBsYXRmb3JtOiAzIH0sXG4gICAgICB7IHN0YXRpb25Db2RlOiAnR1pCJywgYXJyaXZhbFRpbWU6ICcwNjozMycsIGRlcGFydHVyZVRpbWU6ICcwNjozNScsIHBsYXRmb3JtOiAxIH0sXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTUInLCBhcnJpdmFsVGltZTogJzA4OjIwJywgZGVwYXJ0dXJlVGltZTogJzA4OjIyJywgcGxhdGZvcm06IDIgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdCRScsIGFycml2YWxUaW1lOiAnMDk6NTAnLCBkZXBhcnR1cmVUaW1lOiAnMDk6NTInLCBwbGF0Zm9ybTogMSB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0xLTycsIGFycml2YWxUaW1lOiAnMTI6MzUnLCBkZXBhcnR1cmVUaW1lOiBudWxsLCBwbGF0Zm9ybTogMiB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgdHJhaW5OdW1iZXI6ICcyMjY5MScsXG4gICAgdHJhaW5OYW1lOiAnUmFqZGhhbmkgRXhwcmVzcyAoS1RLKScsXG4gICAgdHlwZTogJ2V4cHJlc3MnLFxuICAgIHdlaWdodDogODAwLFxuICAgIGNvc3Q6IDg5MDAwLFxuICAgIHJvdXRlOiBbXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTkRMUycsIGFycml2YWxUaW1lOiBudWxsLCBkZXBhcnR1cmVUaW1lOiAnMTU6NTAnLCBwbGF0Zm9ybTogMiB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0daQicsIGFycml2YWxUaW1lOiAnMTY6MjMnLCBkZXBhcnR1cmVUaW1lOiAnMTY6MjUnLCBwbGF0Zm9ybTogMyB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgdHJhaW5OdW1iZXI6ICcxMjI1OScsXG4gICAgdHJhaW5OYW1lOiAnRHVyb250byBFeHByZXNzJyxcbiAgICB0eXBlOiAnZXhwcmVzcycsXG4gICAgd2VpZ2h0OiA3ODAsXG4gICAgY29zdDogODIwMDAsXG4gICAgcm91dGU6IFtcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdORExTJywgYXJyaXZhbFRpbWU6IG51bGwsIGRlcGFydHVyZVRpbWU6ICcyMjoxNScsIHBsYXRmb3JtOiA0IH0sXG4gICAgICB7IHN0YXRpb25Db2RlOiAnR1pCJywgYXJyaXZhbFRpbWU6ICcyMjo0OCcsIGRlcGFydHVyZVRpbWU6ICcyMjo1MCcsIHBsYXRmb3JtOiAxIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICB0cmFpbk51bWJlcjogJzEyMDU2JyxcbiAgICB0cmFpbk5hbWU6ICdKYW4gU2hhdGFiZGkgRXhwcmVzcycsXG4gICAgdHlwZTogJ2V4cHJlc3MnLFxuICAgIHdlaWdodDogNjUwLFxuICAgIGNvc3Q6IDY1MDAwLFxuICAgIHJvdXRlOiBbXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTkRMUycsIGFycml2YWxUaW1lOiBudWxsLCBkZXBhcnR1cmVUaW1lOiAnMTQ6MjAnLCBwbGF0Zm9ybTogNSB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0daQicsIGFycml2YWxUaW1lOiAnMTQ6NTMnLCBkZXBhcnR1cmVUaW1lOiAnMTQ6NTUnLCBwbGF0Zm9ybTogMiB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgdHJhaW5OdW1iZXI6ICcxMjE3OCcsXG4gICAgdHJhaW5OYW1lOiAnSW50ZXJjaXR5IEV4cHJlc3MnLFxuICAgIHR5cGU6ICdleHByZXNzJyxcbiAgICB3ZWlnaHQ6IDYwMCxcbiAgICBjb3N0OiA1NTAwMCxcbiAgICByb3V0ZTogW1xuICAgICAgeyBzdGF0aW9uQ29kZTogJ05ETFMnLCBhcnJpdmFsVGltZTogbnVsbCwgZGVwYXJ0dXJlVGltZTogJzA3OjMwJywgcGxhdGZvcm06IDYgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdHWkInLCBhcnJpdmFsVGltZTogJzA4OjAzJywgZGVwYXJ0dXJlVGltZTogJzA4OjA1JywgcGxhdGZvcm06IDQgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIHRyYWluTnVtYmVyOiAnMjI0NzAnLFxuICAgIHRyYWluTmFtZTogJ1ZhbmRlIEJoYXJhdCBFeHByZXNzJyxcbiAgICB0eXBlOiAnZXhwcmVzcycsXG4gICAgd2VpZ2h0OiA0MzAsXG4gICAgY29zdDogMTIwMDAwLFxuICAgIHJvdXRlOiBbXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTkRMUycsIGFycml2YWxUaW1lOiBudWxsLCBkZXBhcnR1cmVUaW1lOiAnMDY6MzAnLCBwbGF0Zm9ybTogNyB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0daQicsIGFycml2YWxUaW1lOiAnMDc6MDMnLCBkZXBhcnR1cmVUaW1lOiAnMDc6MDUnLCBwbGF0Zm9ybTogMSB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgdHJhaW5OdW1iZXI6ICcxMTIzNCcsXG4gICAgdHJhaW5OYW1lOiAnRnJlaWdodCBFeHByZXNzJyxcbiAgICB0eXBlOiAnZnJlaWdodCcsXG4gICAgd2VpZ2h0OiAyNTAwLFxuICAgIGNvc3Q6IDM1MDAwLFxuICAgIHJvdXRlOiBbXG4gICAgICB7IHN0YXRpb25Db2RlOiAnR1pCJywgYXJyaXZhbFRpbWU6IG51bGwsIGRlcGFydHVyZVRpbWU6ICcwMzowMCcsIHBsYXRmb3JtOiA4IH0sXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTUInLCBhcnJpdmFsVGltZTogJzA1OjMwJywgZGVwYXJ0dXJlVGltZTogJzA1OjM1JywgcGxhdGZvcm06IDMgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdCRScsIGFycml2YWxUaW1lOiAnMDc6NDUnLCBkZXBhcnR1cmVUaW1lOiBudWxsLCBwbGF0Zm9ybTogMiB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgdHJhaW5OdW1iZXI6ICcxNDU1NicsXG4gICAgdHJhaW5OYW1lOiAnQmFyZWlsbHkgRXhwcmVzcycsXG4gICAgdHlwZTogJ2V4cHJlc3MnLFxuICAgIHdlaWdodDogNTgwLFxuICAgIGNvc3Q6IDQ4MDAwLFxuICAgIHJvdXRlOiBbXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTUInLCBhcnJpdmFsVGltZTogbnVsbCwgZGVwYXJ0dXJlVGltZTogJzE0OjMwJywgcGxhdGZvcm06IDEgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdCRScsIGFycml2YWxUaW1lOiAnMTY6MTUnLCBkZXBhcnR1cmVUaW1lOiAnMTY6MTcnLCBwbGF0Zm9ybTogMyB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0xLTycsIGFycml2YWxUaW1lOiAnMTk6NDUnLCBkZXBhcnR1cmVUaW1lOiBudWxsLCBwbGF0Zm9ybTogNSB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgdHJhaW5OdW1iZXI6ICcxNTcwOCcsXG4gICAgdHJhaW5OYW1lOiAnQW1yYXBhbGkgRXhwcmVzcycsXG4gICAgdHlwZTogJ2V4cHJlc3MnLFxuICAgIHdlaWdodDogNjIwLFxuICAgIGNvc3Q6IDUyMDAwLFxuICAgIHJvdXRlOiBbXG4gICAgICB7IHN0YXRpb25Db2RlOiAnQkUnLCBhcnJpdmFsVGltZTogbnVsbCwgZGVwYXJ0dXJlVGltZTogJzA5OjIwJywgcGxhdGZvcm06IDIgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdMS08nLCBhcnJpdmFsVGltZTogJzEyOjMwJywgZGVwYXJ0dXJlVGltZTogJzEyOjM1JywgcGxhdGZvcm06IDMgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdHWkInLCBhcnJpdmFsVGltZTogJzE2OjQ1JywgZGVwYXJ0dXJlVGltZTogbnVsbCwgcGxhdGZvcm06IDQgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIHRyYWluTnVtYmVyOiAnMTI1NTQnLFxuICAgIHRyYWluTmFtZTogJ1ZhaXNoYWxpIEV4cHJlc3MnLFxuICAgIHR5cGU6ICdleHByZXNzJyxcbiAgICB3ZWlnaHQ6IDY4MCxcbiAgICBjb3N0OiA2ODAwMCxcbiAgICByb3V0ZTogW1xuICAgICAgeyBzdGF0aW9uQ29kZTogJ0xLTycsIGFycml2YWxUaW1lOiBudWxsLCBkZXBhcnR1cmVUaW1lOiAnMDU6MTUnLCBwbGF0Zm9ybTogMSB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0JFJywgYXJyaXZhbFRpbWU6ICcwODozMCcsIGRlcGFydHVyZVRpbWU6ICcwODozMicsIHBsYXRmb3JtOiAyIH0sXG4gICAgICB7IHN0YXRpb25Db2RlOiAnTUInLCBhcnJpdmFsVGltZTogJzEwOjQ1JywgZGVwYXJ0dXJlVGltZTogbnVsbCwgcGxhdGZvcm06IDMgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIHRyYWluTnVtYmVyOiAnMTI4NzYnLFxuICAgIHRyYWluTmFtZTogJ05lZWxhY2hhbCBFeHByZXNzJyxcbiAgICB0eXBlOiAnZXhwcmVzcycsXG4gICAgd2VpZ2h0OiA2NDAsXG4gICAgY29zdDogNTgwMDAsXG4gICAgcm91dGU6IFtcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdHWkInLCBhcnJpdmFsVGltZTogbnVsbCwgZGVwYXJ0dXJlVGltZTogJzEzOjIwJywgcGxhdGZvcm06IDUgfSxcbiAgICAgIHsgc3RhdGlvbkNvZGU6ICdNQicsIGFycml2YWxUaW1lOiAnMTU6MTAnLCBkZXBhcnR1cmVUaW1lOiAnMTU6MTInLCBwbGF0Zm9ybTogMiB9LFxuICAgICAgeyBzdGF0aW9uQ29kZTogJ0xLTycsIGFycml2YWxUaW1lOiAnMTg6NDUnLCBkZXBhcnR1cmVUaW1lOiBudWxsLCBwbGF0Zm9ybTogNCB9XG4gICAgXVxuICB9XG5dXG5cbmV4cG9ydCBjb25zdCBSRUFMX1RJTUVfU0VOU09SX0RBVEEgPSB7XG4gIHRyYWNrT2NjdXBhbmN5OiBbXG4gICAgeyBzZWN0aW9uSWQ6ICdORExTLUdaQi0xJywgb2NjdXBpZWQ6IHRydWUsIHRyYWluSWQ6ICdUMDAxJywgdGltZXN0YW1wOiBEYXRlLm5vdygpIH0sXG4gICAgeyBzZWN0aW9uSWQ6ICdHWkItTUItMScsIG9jY3VwaWVkOiBmYWxzZSwgdHJhaW5JZDogbnVsbCwgdGltZXN0YW1wOiBEYXRlLm5vdygpIH0sXG4gICAgeyBzZWN0aW9uSWQ6ICdNQi1CRS0xJywgb2NjdXBpZWQ6IHRydWUsIHRyYWluSWQ6ICdUMDAyJywgdGltZXN0YW1wOiBEYXRlLm5vdygpIH1cbiAgXSxcbiAgc2lnbmFsU3RhdHVzOiBbXG4gICAgeyBzaWduYWxJZDogJ1NJR19ORExTXzAwMScsIHN0YXR1czogJ2dyZWVuJywgbG9jYXRpb246ICdORExTJywgdGltZXN0YW1wOiBEYXRlLm5vdygpIH0sXG4gICAgeyBzaWduYWxJZDogJ1NJR19HWkJfMDAxJywgc3RhdHVzOiAneWVsbG93JywgbG9jYXRpb246ICdHWkInLCB0aW1lc3RhbXA6IERhdGUubm93KCkgfSxcbiAgICB7IHNpZ25hbElkOiAnU0lHX01CXzAwMScsIHN0YXR1czogJ3JlZCcsIGxvY2F0aW9uOiAnTUInLCB0aW1lc3RhbXA6IERhdGUubm93KCkgfVxuICBdLFxuICB3ZWF0aGVyRGF0YTogW1xuICAgIHsgc3RhdGlvbklkOiAnTkRMUycsIHRlbXBlcmF0dXJlOiAyNSwgaHVtaWRpdHk6IDYwLCB2aXNpYmlsaXR5OiAxMCwgcmFpbmZhbGw6IDAgfSxcbiAgICB7IHN0YXRpb25JZDogJ0daQicsIHRlbXBlcmF0dXJlOiAyNCwgaHVtaWRpdHk6IDY1LCB2aXNpYmlsaXR5OiA4LCByYWluZmFsbDogMiB9LFxuICAgIHsgc3RhdGlvbklkOiAnTUInLCB0ZW1wZXJhdHVyZTogMjMsIGh1bWlkaXR5OiA3MCwgdmlzaWJpbGl0eTogNiwgcmFpbmZhbGw6IDUgfVxuICBdXG59XG5cbi8vIFByaW9yaXR5IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHdlaWdodCBhbmQgY29zdFxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZVRyYWluUHJpb3JpdHkod2VpZ2h0OiBudW1iZXIsIGNvc3Q6IG51bWJlcik6IG51bWJlciB7XG4gIC8vIEhpZ2hlciBjb3N0IGFuZCBsb3dlciB3ZWlnaHQgPSBoaWdoZXIgcHJpb3JpdHlcbiAgLy8gVmFuZGUgQmhhcmF0OiA0MzAgdG9ucywgMTIwMDAwIGNvc3QgPSAxMiAtIDAuNDMgKyAxID0gMTIuNTcg4oaSIDEwIChoaWdoZXN0KVxuICAvLyBGcmVpZ2h0OiAyNTAwIHRvbnMsIDM1MDAwIGNvc3QgPSAzLjUgLSAyLjUgKyAxID0gMiAobG93ZXN0KVxuICBjb25zdCBjb3N0RmFjdG9yID0gY29zdCAvIDEwMDAwXG4gIGNvbnN0IHdlaWdodFBlbmFsdHkgPSB3ZWlnaHQgLyAxMDAwXG4gIGNvbnN0IGJhc2VQcmlvcml0eSA9IDFcbiAgXG4gIGNvbnN0IHByaW9yaXR5ID0gTWF0aC5yb3VuZChjb3N0RmFjdG9yIC0gd2VpZ2h0UGVuYWx0eSArIGJhc2VQcmlvcml0eSlcbiAgcmV0dXJuIE1hdGgubWF4KDEsIE1hdGgubWluKDEwLCBwcmlvcml0eSkpIC8vIENsYW1wIGJldHdlZW4gMS0xMFxufVxuXG5leHBvcnQgY2xhc3MgRGF0YUdlbmVyYXRvciB7XG4gIHN0YXRpYyBnZW5lcmF0ZVRyYWluUG9zaXRpb24odHJhaW5JZDogc3RyaW5nLCBsYXN0UG9zaXRpb246IHtsYXQ6IG51bWJlciwgbG5nOiBudW1iZXJ9LCBzcGVlZDogbnVtYmVyKSB7XG4gICAgY29uc3QgdGltZVN0ZXAgPSAxXG4gICAgY29uc3QgZGlzdGFuY2UgPSAoc3BlZWQgKiB0aW1lU3RlcCkgLyAzNjAwXG4gICAgY29uc3QgYmVhcmluZyA9IE1hdGgucmFuZG9tKCkgKiAyICogTWF0aC5QSVxuICAgIGNvbnN0IGRlbHRhTGF0ID0gKGRpc3RhbmNlIC8gMTExKSAqIE1hdGguY29zKGJlYXJpbmcpXG4gICAgY29uc3QgZGVsdGFMbmcgPSAoZGlzdGFuY2UgLyAxMTEpICogTWF0aC5zaW4oYmVhcmluZylcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgbGF0OiBsYXN0UG9zaXRpb24ubGF0ICsgZGVsdGFMYXQsXG4gICAgICBsbmc6IGxhc3RQb3NpdGlvbi5sbmcgKyBkZWx0YUxuZyxcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgIHNwZWVkLFxuICAgICAgdHJhaW5JZFxuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZW5lcmF0ZURlbGF5RmFjdG9yKCkge1xuICAgIGNvbnN0IGZhY3RvcnMgPSBbXG4gICAgICB7IHR5cGU6ICd3ZWF0aGVyJywgcHJvYmFiaWxpdHk6IDAuMSwgaW1wYWN0OiA1IH0sXG4gICAgICB7IHR5cGU6ICdzaWduYWwnLCBwcm9iYWJpbGl0eTogMC4wNSwgaW1wYWN0OiAxNSB9LFxuICAgICAgeyB0eXBlOiAncGFzc2VuZ2VyJywgcHJvYmFiaWxpdHk6IDAuMTUsIGltcGFjdDogMyB9LFxuICAgICAgeyB0eXBlOiAndGVjaG5pY2FsJywgcHJvYmFiaWxpdHk6IDAuMDMsIGltcGFjdDogMjUgfVxuICAgIF1cbiAgICBcbiAgICBsZXQgdG90YWxEZWxheSA9IDBcbiAgICBmYWN0b3JzLmZvckVhY2goZmFjdG9yID0+IHtcbiAgICAgIGlmIChNYXRoLnJhbmRvbSgpIDwgZmFjdG9yLnByb2JhYmlsaXR5KSB7XG4gICAgICAgIHRvdGFsRGVsYXkgKz0gZmFjdG9yLmltcGFjdFxuICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgcmV0dXJuIHRvdGFsRGVsYXlcbiAgfVxufSJdLCJuYW1lcyI6WyJJTkRJQU5fUkFJTFdBWV9TVEFUSU9OUyIsImlkIiwibmFtZSIsImNvZGUiLCJjb29yZGluYXRlcyIsImxhdCIsImxuZyIsInBsYXRmb3JtcyIsInpvbmUiLCJkaXZpc2lvbiIsIlRSQUlOX1NDSEVEVUxFUyIsInRyYWluTnVtYmVyIiwidHJhaW5OYW1lIiwidHlwZSIsIndlaWdodCIsImNvc3QiLCJyb3V0ZSIsInN0YXRpb25Db2RlIiwiYXJyaXZhbFRpbWUiLCJkZXBhcnR1cmVUaW1lIiwicGxhdGZvcm0iLCJSRUFMX1RJTUVfU0VOU09SX0RBVEEiLCJ0cmFja09jY3VwYW5jeSIsInNlY3Rpb25JZCIsIm9jY3VwaWVkIiwidHJhaW5JZCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJzaWduYWxTdGF0dXMiLCJzaWduYWxJZCIsInN0YXR1cyIsImxvY2F0aW9uIiwid2VhdGhlckRhdGEiLCJzdGF0aW9uSWQiLCJ0ZW1wZXJhdHVyZSIsImh1bWlkaXR5IiwidmlzaWJpbGl0eSIsInJhaW5mYWxsIiwiY2FsY3VsYXRlVHJhaW5Qcmlvcml0eSIsImNvc3RGYWN0b3IiLCJ3ZWlnaHRQZW5hbHR5IiwiYmFzZVByaW9yaXR5IiwicHJpb3JpdHkiLCJNYXRoIiwicm91bmQiLCJtYXgiLCJtaW4iLCJEYXRhR2VuZXJhdG9yIiwiZ2VuZXJhdGVUcmFpblBvc2l0aW9uIiwibGFzdFBvc2l0aW9uIiwic3BlZWQiLCJ0aW1lU3RlcCIsImRpc3RhbmNlIiwiYmVhcmluZyIsInJhbmRvbSIsIlBJIiwiZGVsdGFMYXQiLCJjb3MiLCJkZWx0YUxuZyIsInNpbiIsImdlbmVyYXRlRGVsYXlGYWN0b3IiLCJmYWN0b3JzIiwicHJvYmFiaWxpdHkiLCJpbXBhY3QiLCJ0b3RhbERlbGF5IiwiZm9yRWFjaCIsImZhY3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./data/raw-datasets.ts\n");

/***/ }),

/***/ "(rsc)/./lib/real-time-engine.ts":
/*!*********************************!*\
  !*** ./lib/real-time-engine.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealTimeEngine: () => (/* binding */ RealTimeEngine),\n/* harmony export */   realTimeEngine: () => (/* binding */ realTimeEngine)\n/* harmony export */ });\n/* harmony import */ var _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/raw-datasets */ \"(rsc)/./data/raw-datasets.ts\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass RealTimeEngine extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(){\n        super();\n        this.trains = new Map();\n        this.stations = new Map();\n        this.signals = new Map();\n        this.conflicts = new Map();\n        this.trainRouteProgress = new Map() // Track route progress for each train\n        ;\n        this.updateInterval = null;\n        this.isRunning = false;\n        this.initializeSystem();\n    }\n    start() {\n        if (this.isRunning) return;\n        this.isRunning = true;\n        this.updateInterval = setInterval(()=>{\n            this.processRealTimeUpdates();\n        }, 1000) // Update every second\n        ;\n        this.emit(\"system:started\");\n    }\n    stop() {\n        if (!this.isRunning) return;\n        this.isRunning = false;\n        if (this.updateInterval) {\n            clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n        this.emit(\"system:stopped\");\n    }\n    initializeSystem() {\n        // Initialize with sample data\n        this.loadInitialData();\n    }\n    processRealTimeUpdates() {\n        // Update train positions\n        this.updateTrainPositions();\n        // Detect conflicts\n        this.detectConflicts();\n        // Generate AI recommendations\n        this.generateRecommendations();\n        // Calculate KPIs\n        const kpis = this.calculateKPIs();\n        // Emit updates\n        this.emit(\"data:updated\", {\n            trains: Array.from(this.trains.values()),\n            signals: Array.from(this.signals.values()),\n            conflicts: Array.from(this.conflicts.values()),\n            kpis\n        });\n    }\n    updateTrainPositions() {\n        this.trains.forEach((train)=>{\n            // Get train's route from schedule\n            const schedule = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.TRAIN_SCHEDULES.find((s)=>s.trainNumber === train.number);\n            if (!schedule) return;\n            // Get or initialize route progress for this train\n            let routeProgress = this.trainRouteProgress.get(train.id);\n            if (routeProgress === undefined) {\n                // Initialize with different starting positions based on train number\n                const trainNum = parseInt(train.number) || 1;\n                const hash = trainNum * 2654435761 % 2147483647 // Hash function for distribution\n                ;\n                routeProgress = hash / 2147483647 * (schedule.route.length - 1);\n                this.trainRouteProgress.set(train.id, routeProgress);\n            }\n            // Update progress based on speed\n            const speedKmh = train.speed || 60;\n            const progressIncrement = speedKmh * 0.0002 / 60;\n            routeProgress = Math.min(schedule.route.length - 1, routeProgress + progressIncrement);\n            this.trainRouteProgress.set(train.id, routeProgress);\n            // Determine current station index and progress within segment\n            const currentStationIndex = Math.floor(routeProgress);\n            const segmentProgress = routeProgress - currentStationIndex;\n            const currentRouteStop = schedule.route[currentStationIndex];\n            const nextRouteStop = schedule.route[Math.min(currentStationIndex + 1, schedule.route.length - 1)];\n            if (currentRouteStop && nextRouteStop) {\n                const currentStation = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.INDIAN_RAILWAY_STATIONS.find((s)=>s.code === currentRouteStop.stationCode);\n                const nextStation = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.INDIAN_RAILWAY_STATIONS.find((s)=>s.code === nextRouteStop.stationCode);\n                if (currentStation && nextStation) {\n                    // Use segment progress for interpolation\n                    const progress = segmentProgress;\n                    // Interpolate coordinates between current and next station\n                    const latDiff = nextStation.coordinates.lat - currentStation.coordinates.lat;\n                    const lngDiff = nextStation.coordinates.lng - currentStation.coordinates.lng;\n                    train.coordinates = {\n                        lat: currentStation.coordinates.lat + latDiff * progress,\n                        lng: currentStation.coordinates.lng + lngDiff * progress\n                    };\n                    // Update position for compatibility\n                    train.position = {\n                        x: train.coordinates.lng,\n                        y: train.coordinates.lat\n                    };\n                    // Update current and next station names based on progress\n                    if (segmentProgress < 0.1) {\n                        // At current station\n                        train.currentStation = currentStation.name;\n                        train.nextStation = nextStation.name;\n                    } else if (segmentProgress > 0.9 && currentStationIndex < schedule.route.length - 2) {\n                        // Approaching next station\n                        train.currentStation = nextStation.name;\n                        const afterNext = schedule.route[currentStationIndex + 2];\n                        const afterNextStation = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.INDIAN_RAILWAY_STATIONS.find((s)=>s.code === afterNext?.stationCode);\n                        train.nextStation = afterNextStation?.name || \"Destination\";\n                    } else {\n                        // In transit between stations\n                        if (train.number === \"22470\") {\n                            train.currentStation = \"In Transit\";\n                        } else {\n                            train.currentStation = `En route to ${nextStation.name}`;\n                        }\n                        train.nextStation = nextStation.name;\n                    }\n                } else {\n                    // Fallback to first station coordinates if no match found\n                    const firstStation = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.INDIAN_RAILWAY_STATIONS.find((s)=>s.code === schedule.route[0]?.stationCode);\n                    if (firstStation) {\n                        train.coordinates = {\n                            lat: firstStation.coordinates.lat,\n                            lng: firstStation.coordinates.lng\n                        };\n                        train.position = {\n                            x: firstStation.coordinates.lng,\n                            y: firstStation.coordinates.lat\n                        };\n                    }\n                }\n            }\n            // Simulate speed variation\n            const speedVariation = (Math.random() - 0.5) * 5;\n            train.speed = Math.max(40, Math.min(120, train.speed + speedVariation));\n            // Update delay\n            if (Math.random() < 0.1) {\n                train.delay += Math.floor((Math.random() - 0.5) * 3);\n                train.delay = Math.max(0, train.delay);\n            }\n            // Update status\n            train.status = train.delay > 10 ? \"delayed\" : \"on_time\";\n        });\n    }\n    detectConflicts() {\n        const trains = Array.from(this.trains.values());\n        // Clear existing conflicts\n        this.conflicts.clear();\n        // Check for potential conflicts\n        for(let i = 0; i < trains.length; i++){\n            for(let j = i + 1; j < trains.length; j++){\n                const train1 = trains[i];\n                const train2 = trains[j];\n                // Calculate distance between trains\n                const distance = this.calculateDistance(train1.coordinates, train2.coordinates);\n                // If trains are too close, create conflict\n                if (distance < 5) {\n                    const conflict = {\n                        id: `conflict_${train1.id}_${train2.id}`,\n                        type: \"crossing\",\n                        trains: [\n                            train1.id,\n                            train2.id\n                        ],\n                        location: train1.currentStation || \"unknown\",\n                        severity: distance < 2 ? \"critical\" : distance < 3 ? \"high\" : \"medium\",\n                        estimatedDelay: Math.floor(distance * 2)\n                    };\n                    this.conflicts.set(conflict.id, conflict);\n                }\n            }\n        }\n    }\n    generateRecommendations() {\n        this.conflicts.forEach((conflict)=>{\n            if (!conflict.aiRecommendation) {\n                const recommendation = this.createAIRecommendation(conflict);\n                conflict.aiRecommendation = recommendation;\n            }\n        });\n    }\n    createAIRecommendation(conflict) {\n        const trains = conflict.trains.map((id)=>this.trains.get(id)).filter(Boolean);\n        // Simple AI logic - prioritize based on train priority and delay\n        const highestPriorityTrain = trains.reduce((prev, current)=>prev.priority > current.priority ? prev : current);\n        const actionType = conflict.severity === \"critical\" ? \"hold\" : \"proceed\";\n        const targetTrain = trains.find((t)=>t.id !== highestPriorityTrain.id)?.id || trains[0].id;\n        return {\n            id: `rec_${conflict.id}`,\n            conflictId: conflict.id,\n            type: actionType,\n            targetTrain,\n            action: `${actionType === \"hold\" ? \"Hold\" : \"Proceed with caution\"} train ${targetTrain}`,\n            reasoning: `Based on priority analysis and current delays`,\n            confidence: 0.85,\n            estimatedImpact: {\n                delayReduction: Math.floor(conflict.estimatedDelay * 0.6),\n                affectedTrains: conflict.trains\n            },\n            timestamp: new Date().toISOString()\n        };\n    }\n    calculateDistance(coord1, coord2) {\n        const R = 6371 // Earth's radius in km\n        ;\n        const dLat = (coord2.lat - coord1.lat) * Math.PI / 180;\n        const dLng = (coord2.lng - coord1.lng) * Math.PI / 180;\n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coord1.lat * Math.PI / 180) * Math.cos(coord2.lat * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return R * c;\n    }\n    calculateKPIs() {\n        const trains = Array.from(this.trains.values());\n        const onTimeTrains = trains.filter((t)=>t.delay <= 5).length;\n        const totalDelays = trains.reduce((sum, t)=>sum + t.delay, 0);\n        return {\n            punctuality: onTimeTrains / trains.length * 100,\n            averageDelay: totalDelays / trains.length,\n            throughput: trains.length,\n            conflictsResolved: this.conflicts.size,\n            aiAcceptanceRate: 85 // Mock value\n        };\n    }\n    loadInitialData() {\n        // Load trains from TRAIN_SCHEDULES with unique positions\n        const trains = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.TRAIN_SCHEDULES.map((schedule, index)=>{\n            // Each train starts at different position based on train number\n            const trainNum = parseInt(schedule.trainNumber) || index + 1;\n            const hash = trainNum * 2654435761 % 2147483647;\n            const routePosition = hash / 2147483647;\n            const currentStationIndex = Math.floor(routePosition * (schedule.route.length - 1));\n            const currentStationCode = schedule.route[currentStationIndex]?.stationCode || schedule.route[0]?.stationCode || \"NDLS\";\n            const nextStationCode = schedule.route[Math.min(currentStationIndex + 1, schedule.route.length - 1)]?.stationCode || \"GZB\";\n            const currentStation = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.INDIAN_RAILWAY_STATIONS.find((s)=>s.code === currentStationCode);\n            const nextStation = _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.INDIAN_RAILWAY_STATIONS.find((s)=>s.code === nextStationCode);\n            return {\n                id: `T${String(index + 1).padStart(3, \"0\")}`,\n                number: schedule.trainNumber,\n                name: schedule.trainName,\n                type: schedule.type,\n                priority: (0,_data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.calculateTrainPriority)(schedule.weight || 600, schedule.cost || 50000),\n                currentStation: currentStation?.name || \"Unknown\",\n                nextStation: nextStation?.name || \"Unknown\",\n                status: Math.random() > 0.7 ? \"delayed\" : \"on_time\",\n                delay: Math.random() > 0.7 ? Math.floor(Math.random() * 30) : 0,\n                speed: schedule.trainNumber === \"22470\" ? 90 : Math.floor(Math.random() * 40 + 80),\n                coordinates: {\n                    lat: currentStation?.coordinates.lat || 28.6448,\n                    lng: currentStation?.coordinates.lng || 77.2097\n                },\n                schedule: schedule.route,\n                route: `${currentStation?.name || \"Unknown\"} → ${nextStation?.name || \"Unknown\"}`,\n                eta: `${Math.floor(Math.random() * 45 + 15)} min`,\n                position: {\n                    x: currentStation?.coordinates.lng || 77.2097,\n                    y: currentStation?.coordinates.lat || 28.6448\n                }\n            };\n        });\n        trains.forEach((train)=>this.trains.set(train.id, train));\n        // Load stations\n        _data_raw_datasets__WEBPACK_IMPORTED_MODULE_0__.INDIAN_RAILWAY_STATIONS.forEach((station)=>{\n            this.stations.set(station.id, {\n                id: station.id,\n                name: station.name,\n                code: station.code,\n                coordinates: station.coordinates,\n                platforms: station.platforms,\n                zone: station.zone,\n                division: station.division\n            });\n        });\n    }\n    // Public methods for external control\n    updateTrain(trainId, updates) {\n        const train = this.trains.get(trainId);\n        if (train) {\n            Object.assign(train, updates);\n            this.emit(\"train:updated\", train);\n        }\n    }\n    getSystemState() {\n        return {\n            trains: Array.from(this.trains.values()),\n            stations: Array.from(this.stations.values()),\n            signals: Array.from(this.signals.values()),\n            conflicts: Array.from(this.conflicts.values()),\n            isRunning: this.isRunning\n        };\n    }\n}\nconst realTimeEngine = new RealTimeEngine();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/real-time-engine.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrains%2Froute&page=%2Fapi%2Ftrains%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrains%2Froute.ts&appDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshiva%5CDesktop%5CSIH%20Projects%5CMain%20sih%5Ctrain-traffic-controller&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();